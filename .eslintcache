[{"D:\\web\\Thoth\\thoth\\src\\index.js":"1","D:\\web\\Thoth\\thoth\\src\\App.js":"2","D:\\web\\Thoth\\thoth\\src\\reportWebVitals.js":"3","D:\\web\\Thoth\\thoth\\src\\store\\reducers\\app.js":"4","D:\\web\\Thoth\\thoth\\src\\store\\reducers\\testEditor.js":"5","D:\\web\\Thoth\\thoth\\src\\store\\actions\\app.js":"6","D:\\web\\Thoth\\thoth\\src\\containers\\EditTestWindow\\EditTestWindow.js":"7","D:\\web\\Thoth\\thoth\\src\\containers\\TestSelector\\TestSelector.js":"8","D:\\web\\Thoth\\thoth\\src\\containers\\TestEditSelector\\TestEditSelector.js":"9","D:\\web\\Thoth\\thoth\\src\\containers\\TestWindow\\TestWindow.js":"10","D:\\web\\Thoth\\thoth\\src\\store\\actions\\actionTypes.js":"11","D:\\web\\Thoth\\thoth\\src\\store\\actions\\index.js":"12","D:\\web\\Thoth\\thoth\\src\\firebase\\firebase.js":"13","D:\\web\\Thoth\\thoth\\src\\containers\\TestWindow\\interpretator.js":"14","D:\\web\\Thoth\\thoth\\src\\store\\actions\\testEditor.js":"15","D:\\web\\Thoth\\thoth\\src\\containers\\ScalesEditContainer\\ScalesEditContainer.js":"16","D:\\web\\Thoth\\thoth\\src\\components\\NewTestCard\\NewTestCard.js":"17","D:\\web\\Thoth\\thoth\\src\\components\\UI\\EditTag\\EditTag.js":"18","D:\\web\\Thoth\\thoth\\src\\components\\QuestionPage\\QuestionPage.js":"19","D:\\web\\Thoth\\thoth\\src\\components\\UI\\Input\\Input.js":"20","D:\\web\\Thoth\\thoth\\src\\containers\\InterpretsContainer\\InterpretsContainer.js":"21","D:\\web\\Thoth\\thoth\\src\\containers\\QuestionsEditContainer\\QuestionsEditContainer.js":"22","D:\\web\\Thoth\\thoth\\src\\components\\ScaleEditor\\ScaleEditor.js":"23","D:\\web\\Thoth\\thoth\\src\\components\\InterpretEditor\\InterpretEditor.js":"24","D:\\web\\Thoth\\thoth\\src\\components\\NewQuestion\\NewQuestion.js":"25","D:\\web\\Thoth\\thoth\\src\\components\\UI\\DeleteSideButton\\DeleteSidebutton.js":"26","D:\\web\\Thoth\\thoth\\src\\components\\UI\\EditableInput\\EditableInput.js":"27","D:\\web\\Thoth\\thoth\\src\\components\\ScalesList\\ScalesList.js":"28","D:\\web\\Thoth\\thoth\\src\\components\\UI\\NumRange\\NumRange.js":"29","D:\\web\\Thoth\\thoth\\src\\components\\NewRadioAnswer\\NewRadioAnswer.js":"30","D:\\web\\Thoth\\thoth\\src\\components\\UI\\EditButton\\EditButton.js":"31","D:\\web\\Thoth\\thoth\\src\\components\\NumInput\\NumInput.js":"32","D:\\web\\Thoth\\thoth\\src\\components\\UI\\PlusButton\\PlusButton.js":"33","D:\\web\\Thoth\\thoth\\src\\components\\UI\\MinusButton\\MinusButton.js":"34","D:\\web\\Thoth\\thoth\\src\\components\\InterpretScale\\InterpretScale.js":"35","D:\\web\\Thoth\\thoth\\src\\components\\UI\\CustomRadio\\CustomRadio.js":"36","D:\\web\\Thoth\\thoth\\src\\utils\\utility.js":"37","D:\\web\\Thoth\\thoth\\src\\utils\\comparator.js":"38","D:\\web\\Thoth\\thoth\\src\\hooks\\usePositionReorder.js":"39","D:\\web\\Thoth\\thoth\\src\\hooks\\useMeasurePositions.js":"40","D:\\web\\Thoth\\thoth\\src\\components\\UI\\DragButton\\DragButton.js":"41","D:\\web\\Thoth\\thoth\\src\\components\\TestCard\\TestCard.tsx":"42","D:\\web\\Thoth\\thoth\\src\\components\\UI\\AddItemButton\\AddItemButton.tsx":"43","D:\\web\\Thoth\\thoth\\src\\components\\UI\\CheckButton\\CheckButton.tsx":"44"},{"size":1217,"mtime":1613411378732,"results":"45","hashOfConfig":"46"},{"size":1790,"mtime":1613585933880,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":459,"mtime":1616834420306,"results":"49","hashOfConfig":"46"},{"size":15789,"mtime":1620321494744,"results":"50","hashOfConfig":"46"},{"size":425,"mtime":1613587834842,"results":"51","hashOfConfig":"46"},{"size":2234,"mtime":1619979994780,"results":"52","hashOfConfig":"46"},{"size":618,"mtime":1613588743187,"results":"53","hashOfConfig":"46"},{"size":1318,"mtime":1613585008174,"results":"54","hashOfConfig":"46"},{"size":2415,"mtime":1619793249488,"results":"55","hashOfConfig":"46"},{"size":1728,"mtime":1620321449314,"results":"56","hashOfConfig":"46"},{"size":666,"mtime":1620321639799,"results":"57","hashOfConfig":"46"},{"size":583,"mtime":1613328045507,"results":"58","hashOfConfig":"46"},{"size":1657,"mtime":1617906420862,"results":"59","hashOfConfig":"46"},{"size":4802,"mtime":1620321608749,"results":"60","hashOfConfig":"46"},{"size":2637,"mtime":1620322832902,"results":"61","hashOfConfig":"46"},{"size":362,"mtime":1613514371816,"results":"62","hashOfConfig":"46"},{"size":271,"mtime":1612893061670,"results":"63","hashOfConfig":"46"},{"size":1336,"mtime":1619712413209,"results":"64","hashOfConfig":"46"},{"size":1517,"mtime":1612454220350,"results":"65","hashOfConfig":"46"},{"size":3168,"mtime":1619800451407,"results":"66","hashOfConfig":"46"},{"size":4657,"mtime":1620324084352,"results":"67","hashOfConfig":"46"},{"size":1574,"mtime":1620324401164,"results":"68","hashOfConfig":"46"},{"size":2248,"mtime":1615205875443,"results":"69","hashOfConfig":"46"},{"size":3577,"mtime":1656165450191,"results":"70","hashOfConfig":"46"},{"size":515,"mtime":1614416833866,"results":"71","hashOfConfig":"46"},{"size":1801,"mtime":1619980947049,"results":"72","hashOfConfig":"46"},{"size":1184,"mtime":1620321008686,"results":"73","hashOfConfig":"46"},{"size":878,"mtime":1611679283552,"results":"74","hashOfConfig":"46"},{"size":2719,"mtime":1620320866649,"results":"75","hashOfConfig":"46"},{"size":397,"mtime":1614502656369,"results":"76","hashOfConfig":"46"},{"size":1324,"mtime":1613146365489,"results":"77","hashOfConfig":"46"},{"size":261,"mtime":1614503318949,"results":"78","hashOfConfig":"46"},{"size":261,"mtime":1614503012807,"results":"79","hashOfConfig":"46"},{"size":1324,"mtime":1615204009730,"results":"80","hashOfConfig":"46"},{"size":506,"mtime":1619625226068,"results":"81","hashOfConfig":"46"},{"size":124,"mtime":1619800424026,"results":"82","hashOfConfig":"46"},{"size":194,"mtime":1619871395125,"results":"83","hashOfConfig":"46"},{"size":2080,"mtime":1623786046051,"results":"84","hashOfConfig":"46"},{"size":283,"mtime":1620324290701,"results":"85","hashOfConfig":"46"},{"size":319,"mtime":1623501673325,"results":"86","hashOfConfig":"46"},{"size":535,"mtime":1656163790954,"results":"87","hashOfConfig":"46"},{"size":627,"mtime":1656165999351,"results":"88","hashOfConfig":"46"},{"size":560,"mtime":1656166492537,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"q46tlk",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web\\Thoth\\thoth\\src\\index.js",[],["186","187"],"D:\\web\\Thoth\\thoth\\src\\App.js",[],"D:\\web\\Thoth\\thoth\\src\\reportWebVitals.js",[],"D:\\web\\Thoth\\thoth\\src\\store\\reducers\\app.js",[],"D:\\web\\Thoth\\thoth\\src\\store\\reducers\\testEditor.js",["188"],"import {\r\n  updateObject\r\n} from '../../utils/utility';\r\n\r\nimport * as actionTypes from '../actions/actionTypes';\r\n\r\nimport {\r\n  v1 as uuidv1\r\n} from 'uuid';\r\n\r\nimport comparator from '../../utils/comparator';\r\n\r\n\r\nconst initialState = {};\r\n\r\n\r\nfunction createNewTest( state ) {\r\n  const newTestObject = {\r\n    testName: \"\",\r\n    testScales: {},\r\n    testQuestions: {},\r\n    testInterpretations: {}\r\n  };\r\n\r\n  return updateObject( state, newTestObject );\r\n}\r\n\r\nconst setTestEditorData = ( state, testData ) => {\r\n  return updateObject( state, testData );\r\n}\r\n\r\nfunction addTestName( state, testName ) {\r\n  return updateObject( state, {\r\n    testName: testName\r\n  } )\r\n}\r\n\r\n// scale functions\r\nfunction createNewScale( state ) {\r\n  let scalesCopy = {\r\n    ...state.testScales\r\n  };\r\n  scalesCopy = {\r\n    ...scalesCopy,\r\n    [ uuidv1() ]: {\r\n      scaleNumber: Object.keys( state.testScales ).length,\r\n      scaleName: \"\"\r\n    }\r\n  };\r\n\r\n  return ( {\r\n    ...state,\r\n    testScales: {\r\n      ...scalesCopy\r\n    }\r\n  } );\r\n}\r\n\r\nfunction changeScaleName( state, scaleName, targetScaleId ) {\r\n  const scalesCopy = JSON.parse( JSON.stringify( state.testScales ) );\r\n\r\n  scalesCopy[ targetScaleId ] = {\r\n    ...scalesCopy[ targetScaleId ],\r\n    scaleName: scaleName\r\n  }\r\n  return ( {\r\n    ...state,\r\n    testScales: {\r\n      ...state.testScales,\r\n      [ targetScaleId ]: {\r\n        ...scalesCopy[ targetScaleId ]\r\n      }\r\n    }\r\n  } );\r\n\r\n}\r\n\r\nfunction changeScaleNumber( state, newScalesArray ) {\r\n  let scalesArray = [ ...newScalesArray ];\r\n\r\n  scalesArray.forEach( ( element, index ) => scalesArray[ index ][ 1 ].scaleNumber = index );\r\n\r\n  let updatedScales = Object.fromEntries( scalesArray );\r\n\r\n\r\n  return ( {\r\n    ...state,\r\n    testScales: {\r\n      ...updatedScales\r\n    }\r\n  } );\r\n}\r\n\r\nfunction deleteScale( state, targetScaleId ) {\r\n  let scalesCopy = JSON.parse( JSON.stringify( state.testScales ) );\r\n\r\n  delete scalesCopy[ targetScaleId ];\r\n\r\n  //After deleting a scale, we should reasign scale nubers to all ascales.\r\n  scalesCopy = Object.entries( scalesCopy ).sort( ( elementA, elementB ) => comparator( elementA[ 1 ].scaleNumber, elementB[ 1 ].scaleNumber ) );\r\n  scalesCopy.forEach( ( element, index ) => scalesCopy[ index ][ 1 ].scaleNumber = index );\r\n  scalesCopy = Object.fromEntries( scalesCopy );\r\n\r\n  return ( {\r\n    ...state,\r\n    testScales: {\r\n      ...scalesCopy\r\n    }\r\n  } );\r\n}\r\n//end scale functions\r\n\r\n\r\n// questions functions\r\nfunction createNewQuestion( state ) {\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ uuidv1() ]: {\r\n        questionNumber: [ Object.keys( state.testQuestions ).length + 1 ],\r\n        questionText: \"\",\r\n        questionRadioAnswers: {}\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction changeQuestionNumber( state, newQuestionsArray ) {\r\n  let questionsArray = [ ...newQuestionsArray ];\r\n\r\n  questionsArray.forEach( ( element, index ) => questionsArray[ index ][ 1 ].questionNumber = index );\r\n\r\n  let updatedQuestions = Object.fromEntries( questionsArray );\r\n\r\n\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.updatedQuestions,\r\n    }\r\n  } );\r\n}\r\n\r\nfunction changeQuestionText( state, newQuestionText, targetQuestionId ) {\r\n  const questionsCopy = JSON.parse( JSON.stringify( state.testQuestions ) );\r\n\r\n  questionsCopy[ targetQuestionId ] = {\r\n    ...questionsCopy[ targetQuestionId ],\r\n    questionText: newQuestionText\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ targetQuestionId ]: {\r\n        ...questionsCopy[ targetQuestionId ]\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction deleteQestion( state, targetQuestionId ) {\r\n\r\n  const questionsCopy = JSON.parse( JSON.stringify( state.testQuestions ) );\r\n\r\n  delete questionsCopy[ targetQuestionId ];\r\n\r\n  return updateObject( state, {\r\n    testQuestions: questionsCopy\r\n  } )\r\n}\r\n//end question functions\r\n\r\n\r\n//answer functions\r\nfunction addNewRadioAnswer( state, targetQuestionId ) {\r\n\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ targetQuestionId ]: {\r\n        ...state.testQuestions[ targetQuestionId ],\r\n        questionRadioAnswers: {\r\n          ...state.testQuestions[ targetQuestionId ].questionRadioAnswers,\r\n          [ uuidv1() ]: {\r\n            answerNumber: [ Object.keys( state.testQuestions[ targetQuestionId ].questionRadioAnswers ).length + 1 ],\r\n            answerText: \"\",\r\n            scaleDependencies: [ {\r\n              scaleId: \"\",\r\n              answerValue: 0\r\n            } ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction changeRadioAnswerText( state, newAnswerText, targetQuestionId, answerId ) {\r\n  const questionsCopy = JSON.parse( JSON.stringify( state.testQuestions ) );\r\n\r\n  questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ] = {\r\n    ...questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ],\r\n    answerText: newAnswerText\r\n  }\r\n\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ targetQuestionId ]: {\r\n        ...state.testQuestions[ targetQuestionId ],\r\n        questionRadioAnswers: {\r\n          ...state.testQuestions[ targetQuestionId ].questionRadioAnswers,\r\n          [ answerId ]: {\r\n            ...questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ],\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction deleteRadioAnswer( state, targetQuestionId, answerId ) {\r\n  const questionsCopy = JSON.parse( JSON.stringify( state.testQuestions ) );\r\n  delete questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ];\r\n\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ targetQuestionId ]: {\r\n        ...state.testQuestions[ targetQuestionId ],\r\n        questionRadioAnswers: {\r\n          ...questionsCopy[ targetQuestionId ].questionRadioAnswers\r\n        }\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction addDependency( state, targetQuestionId, answerId ) {\r\n  const questionsCopy = JSON.parse( JSON.stringify( state.testQuestions ) );\r\n\r\n  questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ].scaleDependencies.push( {\r\n    scaleId: \"\",\r\n    answerValue: 0\r\n  } );\r\n\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ targetQuestionId ]: {\r\n        ...state.testQuestions[ targetQuestionId ],\r\n        questionRadioAnswers: {\r\n          ...state.testQuestions[ targetQuestionId ].questionRadioAnswers,\r\n          [ answerId ]: {\r\n            ...questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ],\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\n\r\nfunction changeScaleDependency( state, targetQuestionId, answerId, depIndex, newValue ) {\r\n  const questionsCopy = JSON.parse( JSON.stringify( state.testQuestions ) );\r\n\r\n  questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ].scaleDependencies[ depIndex ].scaleId = newValue;\r\n\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ targetQuestionId ]: {\r\n        ...state.testQuestions[ targetQuestionId ],\r\n        questionRadioAnswers: {\r\n          ...state.testQuestions[ targetQuestionId ].questionRadioAnswers,\r\n          [ answerId ]: {\r\n            ...questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ],\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction deleteDependency( state, targetQuestionId, answerId, depIndex ) {\r\n  const questionsCopy = JSON.parse( JSON.stringify( state.testQuestions ) );\r\n\r\n  questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ].scaleDependencies.splice( depIndex, 1 );\r\n\r\n  if ( questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ].scaleDependencies.length === 0 ) {\r\n    questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ].scaleDependencies.push( {\r\n      scaleId: \"\",\r\n      answerValue: 0\r\n    } );\r\n  };\r\n\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ targetQuestionId ]: {\r\n        ...state.testQuestions[ targetQuestionId ],\r\n        questionRadioAnswers: {\r\n          ...state.testQuestions[ targetQuestionId ].questionRadioAnswers,\r\n          [ answerId ]: {\r\n            ...questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ],\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction changeAnswerValue( state, targetQuestionId, answerId, depIndex, newValue ) {\r\n  const questionsCopy = JSON.parse( JSON.stringify( state.testQuestions ) );\r\n\r\n  questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ].scaleDependencies[ depIndex ].answerValue = newValue;\r\n  return ( {\r\n    ...state,\r\n    testQuestions: {\r\n      ...state.testQuestions,\r\n      [ targetQuestionId ]: {\r\n        ...state.testQuestions[ targetQuestionId ],\r\n        questionRadioAnswers: {\r\n          ...state.testQuestions[ targetQuestionId ].questionRadioAnswers,\r\n          [ answerId ]: {\r\n            ...questionsCopy[ targetQuestionId ].questionRadioAnswers[ answerId ],\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } );\r\n}\r\n//end answer functions\r\n\r\n\r\n//interpret functions\r\nfunction addInterpret( state ) {\r\n  let interpretCopy = {\r\n    ...state.testInterpretations\r\n  };\r\n\r\n  interpretCopy = {\r\n    ...interpretCopy,\r\n    [ uuidv1() ]: {\r\n      interpretNumber: [ Object.keys( interpretCopy ).length + 1 ],\r\n      interpretText: \"\",\r\n      requiredScales: [ {\r\n        requiredScaleId: '',\r\n        requiredValueLimits: {\r\n          from: 0,\r\n          to: 0\r\n        }\r\n      } ]\r\n    }\r\n  }\r\n\r\n  return ( {\r\n    ...state,\r\n    testInterpretations: {\r\n      ...interpretCopy\r\n    }\r\n  } );\r\n}\r\n\r\nfunction changeInterpretText( state, targetInterpretId, newInterpretText ) {\r\n  const interpretCopy = {\r\n    ...state.testInterpretations\r\n  };\r\n\r\n\r\n  interpretCopy[ targetInterpretId ] = {\r\n    ...interpretCopy[ targetInterpretId ],\r\n    interpretText: newInterpretText\r\n  };\r\n\r\n  return ( {\r\n    ...state,\r\n    testInterpretations: {\r\n      ...state.testInterpretations,\r\n      [ targetInterpretId ]: {\r\n        ...interpretCopy[ targetInterpretId ]\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction changeInterpretValueLimits( state, targetInterpretId, scaleIndex, fromLimit, toLimit ) {\r\n  const interpretCopy = {\r\n    ...state.testInterpretations\r\n  };\r\n\r\n\r\n  interpretCopy[ targetInterpretId ].requiredScales[ scaleIndex ].requiredValueLimits = {\r\n    from: fromLimit,\r\n    to: toLimit\r\n  };\r\n\r\n  return ( {\r\n    ...state,\r\n    testInterpretations: {\r\n      ...state.testInterpretations,\r\n      [ targetInterpretId ]: {\r\n        ...interpretCopy[ targetInterpretId ]\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction addInterpretRequiredScale( state, targetInterpretId ) {\r\n  const interpretCopy = {\r\n    ...state.testInterpretations\r\n  };\r\n\r\n  interpretCopy[ targetInterpretId ].requiredScales.push( {\r\n    requiredScaleId: '',\r\n    requiredValueLimits: {\r\n      from: 0,\r\n      to: 0\r\n    }\r\n  } );\r\n\r\n  return ( {\r\n    ...state,\r\n    testInterpretations: {\r\n      ...state.testInterpretations,\r\n      [ targetInterpretId ]: {\r\n        ...interpretCopy[ targetInterpretId ]\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction changeInterpretRequiredScale( state, targetInterpretId, scaleIndex, newScaleId ) {\r\n  const interpretCopy = {\r\n    ...state.testInterpretations\r\n  };\r\n\r\n  interpretCopy[ targetInterpretId ].requiredScales[ scaleIndex ].requiredScaleId = newScaleId;\r\n\r\n  return ( {\r\n    ...state,\r\n    testInterpretations: {\r\n      ...state.testInterpretations,\r\n      [ targetInterpretId ]: {\r\n        ...interpretCopy[ targetInterpretId ]\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction deleteInterpretRequiredScale( state, targetInterpretId, scaleIndex ) {\r\n  const interpretCopy = {\r\n    ...state.testInterpretations\r\n  };\r\n  interpretCopy[ targetInterpretId ].requiredScales.splice( scaleIndex, 1 )\r\n\r\n  return ( {\r\n    ...state,\r\n    testInterpretations: {\r\n      ...state.testInterpretations,\r\n      [ targetInterpretId ]: {\r\n        ...interpretCopy[ targetInterpretId ]\r\n      }\r\n    }\r\n  } );\r\n}\r\n\r\nfunction deleteInterpret( state, targetInterpretId ) {\r\n  const interpretCopy = {\r\n    ...state.testInterpretations\r\n  };\r\n\r\n  delete interpretCopy[ targetInterpretId ];\r\n\r\n  return ( {\r\n    ...state,\r\n    testInterpretations: {\r\n      ...interpretCopy\r\n    }\r\n  } );\r\n}\r\n\r\n\r\n\r\n//end interpret functions\r\n\r\n\r\n// TODO: Create function for element searching\r\n//TODO: Apply deep cloning for objects\r\nfunction testEditor( state = initialState, action ) {\r\n  switch ( action.type ) {\r\n    case actionTypes.CREATE_NEW_TEST:\r\n      return createNewTest( state );\r\n\r\n    case actionTypes.SET_TEST_EDITOR_DATA:\r\n      return setTestEditorData( state, action.testData );\r\n\r\n    case actionTypes.ADD_TEST_NAME:\r\n      return addTestName( state, action.testName );\r\n\r\n      //scales reducers\r\n    case actionTypes.CREATE_NEW_SCALE:\r\n      return createNewScale( state );\r\n\r\n    case actionTypes.CHANGE_SCALE_NAME:\r\n      return changeScaleName( state, action.scaleName, action.targetScaleId );\r\n\r\n    case actionTypes.CHANGE_SCALE_NUMBER:\r\n      return changeScaleNumber( state, action.newScalesArray );\r\n\r\n    case actionTypes.DELETE_SCALE:\r\n      return deleteScale( state, action.scaleId );\r\n\r\n      //question reducers\r\n    case actionTypes.CREATE_NEW_QUESTION:\r\n      return createNewQuestion( state );\r\n\r\n    case actionTypes.CHANGE_QUESTION_NUMBER:\r\n      return changeQuestionNumber( state,action.newQuestionsArray );\r\n\r\n    case actionTypes.CHANGE_QUESTION_TEXT:\r\n      return changeQuestionText( state, action.newQuestionText, action.targetQuestionId );\r\n\r\n    case actionTypes.DELETE_QUESTION:\r\n      return deleteQestion( state, action.targetQuestionId );\r\n\r\n    case actionTypes.CREATE_NEW_RADIO_ANSWER:\r\n      return addNewRadioAnswer( state, action.targetQuestionId );\r\n\r\n    case actionTypes.CHANGE_RADIO_ANSWER_TEXT:\r\n      return changeRadioAnswerText( state, action.newAnswerText, action.targetQuestionId, action.answerId );\r\n\r\n    case actionTypes.DELETE_RADIO_ANSWER:\r\n      return deleteRadioAnswer( state, action.targetQuestionId, action.answerId );\r\n\r\n    case actionTypes.ADD_DEPENDENCY:\r\n      return addDependency( state, action.targetQuestionId, action.answerId );\r\n\r\n    case actionTypes.CHANGE_SCALE_DEPENDENCY:\r\n      return changeScaleDependency( state, action.targetQuestionId, action.answerId, action.depIndex, action.newValue );\r\n\r\n    case actionTypes.DELETE_DEPENDENCY:\r\n      return deleteDependency( state, action.targetQuestionId, action.answerId, action.depIndex );\r\n\r\n    case actionTypes.CHANGE_ANSWER_VALUE:\r\n      return changeAnswerValue( state, action.targetQuestionId, action.answerId, action.depIndex, action.newValue );\r\n\r\n    case actionTypes.ADD_INTERPRET:\r\n      return addInterpret( state );\r\n\r\n      //interprets reducers\r\n    case actionTypes.CHANGE_INTERPRET_TEXT:\r\n      return changeInterpretText( state, action.targetInterpretId, action.newInterpretText );\r\n\r\n    case actionTypes.CHANGE_INTERPRET_VALUE_LIMITS:\r\n      return changeInterpretValueLimits( state, action.targetInterpretId, action.scaleIndex, action.fromLimit, action.toLimit )\r\n\r\n    case actionTypes.CHANGE_INTERPRET_REQUIRED_SCALE:\r\n      return changeInterpretRequiredScale( state, action.targetInterpretId, action.scaleIndex, action.newScaleId );\r\n\r\n    case actionTypes.ADD_INTERPRET_REQUIRED_SCALE:\r\n      return addInterpretRequiredScale( state, action.targetInterpretId );\r\n\r\n    case actionTypes.DELETE_INTERPRET_REQUIRED_SCALE:\r\n      return deleteInterpretRequiredScale( state, action.targetInterpretId, action.scaleIndex );\r\n\r\n    case actionTypes.DELETE_INTERPRET:\r\n      return deleteInterpret( state, action.targetInterpretId );\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport {\r\n  testEditor\r\n};","D:\\web\\Thoth\\thoth\\src\\store\\actions\\app.js",[],"D:\\web\\Thoth\\thoth\\src\\containers\\EditTestWindow\\EditTestWindow.js",[],"D:\\web\\Thoth\\thoth\\src\\containers\\TestSelector\\TestSelector.js",[],"D:\\web\\Thoth\\thoth\\src\\containers\\TestEditSelector\\TestEditSelector.js",[],"D:\\web\\Thoth\\thoth\\src\\containers\\TestWindow\\TestWindow.js",["189"],"import React, { useState } from 'react';\r\n\r\nimport classes from './TestWindow.module.scss';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport QuestionPage from '../../components/QuestionPage/QuestionPage';\r\nimport { FormControl } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddItemButton from '../../components/UI/AddItemButton/AddItemButton';\r\n\r\nimport interpretator from './interpretator';\r\n\r\n\r\nfunction TestWindow( { testsData, match } ) {\r\n  const [testResults, setTestResults] = useState( {} );\r\n  const [testCardIndex, setTestCardIndex] = useState( 0 );\r\n\r\n  function setResult( questionId, answerId ) {\r\n    setTestResults( {\r\n      ...testResults,\r\n      [questionId]: answerId\r\n    } );\r\n  }\r\n\r\n  function nextTextCard() {\r\n    setTestCardIndex( testCardIndex + 1 );\r\n  }\r\n  function prevTextCard() {\r\n    setTestCardIndex( testCardIndex - 1 );\r\n  }\r\n\r\n  const testsCards = Object.entries( testsData[match.params.testId].testQuestions ).map( ( [questionId, questionData] ) => <QuestionPage\r\n    key={ questionId }\r\n    questionData={ questionData }\r\n    questionId={ questionId }\r\n    setResult={ setResult }\r\n    interpret={ () => console.log( interpretator( testResults, testsData[match.params.testId].testQuestions, testsData[match.params.testId].testScales, testsData[match.params.testId].testInterpretations ) ) }\r\n  /> );\r\n\r\n  const nextButton = ( testCardIndex === testsCards.length - 1 ?\r\n    <Button onClick={ () => console.log( interpretator( testResults, testsData[match.params.testId].testQuestions, testsData[match.params.testId].testScales, testsData[match.params.testId].testInterpretations ) ) } color=\"primary\" variant=\"contained\">\r\n      { \"Завершити тест\" }\r\n    </Button>\r\n    :\r\n    <Button onClick={ nextTextCard } color=\"primary\" variant=\"contained\">\r\n      { \"Далі >\" }\r\n    </Button> );\r\n\r\n  const prevButton = ( testCardIndex !== 0 ?\r\n    <Button onClick={ prevTextCard } variant={ \"contained\" }>\r\n      { \"< Назад\" }\r\n    </Button>\r\n    :\r\n    <div></div> );\r\n\r\n\r\n  return (\r\n    <div className={ classes.TestWindow }>\r\n      <FormControl className={ classes.FormControl }>\r\n        { testsCards[testCardIndex] }\r\n      </FormControl>\r\n      <div className={ classes.ButtonBlock }>\r\n        { prevButton }\r\n        { nextButton }\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default withRouter( TestWindow );","D:\\web\\Thoth\\thoth\\src\\store\\actions\\actionTypes.js",[],"D:\\web\\Thoth\\thoth\\src\\store\\actions\\index.js",[],"D:\\web\\Thoth\\thoth\\src\\firebase\\firebase.js",[],"D:\\web\\Thoth\\thoth\\src\\containers\\TestWindow\\interpretator.js",["190","191","192"],"export default function showInterpret( results, questions, scales, interprets ) {\r\n  let finalInterpret = [];\r\n  let scalesPoints = {};\r\n\r\n  function checkInterpret( points, limits ) {\r\n    if ( points >= parseFloat( limits.from ) && points <= parseFloat( limits.to ) ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  //Create points counter.\r\n  Object.keys( scales ).forEach( key => scalesPoints = {\r\n    ...scalesPoints,\r\n    [ key ]: 0\r\n  } );\r\n\r\n\r\n\r\n  //Calculating results.\r\n  Object.entries( results ).forEach( ( [ questionId, answerId ] ) => {\r\n    console.log( questions[ questionId ] );\r\n    questions[ questionId ].questionRadioAnswers[ answerId ].scaleDependencies.forEach( dep => (\r\n      scalesPoints = {\r\n        ...scalesPoints,\r\n        [ dep.scaleId ]: scalesPoints[ dep.scaleId ] + dep.answerValue\r\n      }\r\n    ) )\r\n  } );\r\n\r\n\r\n\r\n  //Comparing avalible and required points. Pushing interpretaitons.\r\n  Object.values( interprets ).forEach( interpretValues => {\r\n    let interpretIsValid = true;\r\n\r\n    const scaleId = interpretValues.requiredScales[ 0 ].requiredScaleId;\r\n\r\n    const from = interpretValues.requiredScales[ 0 ].requiredValueLimits.from;\r\n    const to = interpretValues.requiredScales[ 0 ].requiredValueLimits.to;\r\n\r\n\r\n    interpretValues.requiredScales.forEach( requiredScale => {\r\n      if ( !interpretIsValid || !checkInterpret( scalesPoints[ requiredScale.requiredScaleId ], requiredScale.requiredValueLimits ) ) {\r\n        interpretIsValid = false;\r\n      }\r\n    } );\r\n\r\n\r\n    if ( interpretIsValid ) {\r\n      finalInterpret.push( interpretValues.interpretText );\r\n    }\r\n  } );\r\n\r\n  return finalInterpret;\r\n}","D:\\web\\Thoth\\thoth\\src\\store\\actions\\testEditor.js",[],"D:\\web\\Thoth\\thoth\\src\\containers\\ScalesEditContainer\\ScalesEditContainer.js",["193"],"import React, { useEffect } from 'react';\r\n\r\nimport classes from './ScalesEditContainer.module.scss';\r\n\r\nimport {\r\n  changeScaleName,\r\n  createNewScale,\r\n  changeScaleNumber,\r\n  deleteScale\r\n} from '../../store/actions/index';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { usePositionReorder } from '../../hooks/usePositionReorder';\r\n\r\nimport AddItemButton from '../../components/UI/AddItemButton/AddItemButton';\r\nimport ScaleEditor from '../../components/ScaleEditor/ScaleEditor';\r\n\r\nimport comparator from '../../utils/comparator';\r\n\r\n\r\nfunction ScalesEditContainer( { testScales, onCreateScale, onChangeScaleNumber, onChangeScaleName, onDeleteScale } ) {\r\n  const sortedScales = Object.entries( testScales ).sort( ( elementA, elementB ) => comparator( elementA[1].scaleNumber, elementB[1].scaleNumber ) );\r\n\r\n  const [order, updatePosition, updateOrder, refreshOrder] = usePositionReorder( sortedScales, onChangeScaleNumber );\r\n\r\n  useEffect( () => ( refreshOrder( sortedScales ) ), [testScales] );\r\n\r\n  function scaleCreator( scalesArray ) {\r\n    if ( scalesArray !== undefined ) {\r\n      return order.map( ( [scaleId, values], index ) => (\r\n        <ScaleEditor\r\n          updateOrder={ updateOrder }\r\n          updatePosition={ updatePosition }\r\n          index={ index }\r\n          key={ scaleId }\r\n          scaleNumber={ values.scaleNumber }\r\n          scaleName={ values.scaleName }\r\n          changeScaleName={ onChangeScaleName }\r\n          scaleId={ scaleId }\r\n          deleteScale={ onDeleteScale }\r\n        />\r\n      )\r\n      );\r\n\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={ classes.ScalesEditContainer }>\r\n      <div className={ classes.ContainerHeader }>\r\n        <span>Шкали</span>\r\n      </div>\r\n      <div className={ classes.ContainerBody }>\r\n        { scaleCreator( order ) }\r\n        <AddItemButton\r\n          externalClasses={ classes.AddButton }\r\n          buttonText=\"Додати шкалу\"\r\n          clicked={ onCreateScale }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps( state ) {\r\n  return {\r\n    testScales: state.testEditorState.testScales\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps( dispatch ) {\r\n  return {\r\n    onCreateScale: () => dispatch( createNewScale() ),\r\n    onChangeScaleName: ( scaleNameValue, scaleId ) => dispatch( changeScaleName( scaleNameValue, scaleId ) ),\r\n    onChangeScaleNumber: ( newScalesArray ) => dispatch( changeScaleNumber( newScalesArray ) ),\r\n    onDeleteScale: ( scaleId ) => dispatch( deleteScale( scaleId ) )\r\n  };\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( ScalesEditContainer );","D:\\web\\Thoth\\thoth\\src\\components\\NewTestCard\\NewTestCard.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\EditTag\\EditTag.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\QuestionPage\\QuestionPage.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\Input\\Input.js",[],"D:\\web\\Thoth\\thoth\\src\\containers\\InterpretsContainer\\InterpretsContainer.js",[],"D:\\web\\Thoth\\thoth\\src\\containers\\QuestionsEditContainer\\QuestionsEditContainer.js",["194"],"import React, { useEffect } from 'react';\r\n\r\nimport classes from './QuestionsEditContainer.module.scss';\r\n\r\nimport {\r\n  createNewQuestion,\r\n  changeQuestionText,\r\n  changeQuestionNumber,\r\n  deleteQestion,\r\n  addNewRadioAnswer,\r\n  changeRadioAnswerText,\r\n  deleteRadioAnswer,\r\n  addDependency,\r\n  changeAnswerValue,\r\n  changeScaleDependency,\r\n  deleteDependency\r\n} from '../../store/actions/index';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport AddItemButton from '../../components/UI/AddItemButton/AddItemButton';\r\nimport NewQuestion from '../../components/NewQuestion/NewQuestion';\r\n\r\nimport comparator from '../../utils/comparator';\r\n\r\nimport { usePositionReorder } from '../../hooks/usePositionReorder';\r\n\r\n\r\nfunction QuestionsEditContainer( { testScales, testQuestions, onCreateNewQuestion, onChangeQuestionText, onDeleteQestion, onAddNewRadioAnswer, onChangeQuestionNumber, onChangeRadioAnswerText, onDeleteRadioAnswer, onAddDependency, onChangeAnswerValue, onChangeScaleDependency, onDeleteDependency } ) {\r\n  const sortedQuestions = Object.entries( testQuestions ).sort( ( elementA, elementB ) => comparator( elementA[1].questionNumber, elementB[1].questionNumber ) );\r\n\r\n  const [order, updatePosition, updateOrder, refreshOrder] = usePositionReorder( sortedQuestions, onChangeQuestionNumber );\r\n\r\n  useEffect( () => ( refreshOrder( sortedQuestions ) ), [testQuestions] );\r\n\r\n  function qeustionCreator( testQuestionsArray ) {\r\n    if ( testQuestionsArray !== undefined ) {\r\n      return testQuestionsArray.map( ( [questionId, values], index ) => (\r\n        <NewQuestion\r\n          updateOrder={ updateOrder }\r\n          updatePosition={ updatePosition }\r\n          changeQuestionText={ onChangeQuestionText }\r\n          questionText={ values.questionText }\r\n          key={ questionId }\r\n          questionId={ questionId }\r\n          questionIndex={ index }\r\n          deleteQuestion={ onDeleteQestion }\r\n          radioAnswers={ values.questionRadioAnswers }\r\n          newRadioAnswer={ onAddNewRadioAnswer }\r\n          changeRadioAnswerText={ onChangeRadioAnswerText }\r\n          deleteRadioAnswer={ onDeleteRadioAnswer }\r\n          testScales={ testScales }\r\n          addDependency={ onAddDependency }\r\n          changeAnswerValue={ onChangeAnswerValue }\r\n          changeScaleDependency={ onChangeScaleDependency }\r\n          deleteDependency={ onDeleteDependency }\r\n        />\r\n      ) )\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={ classes.QuestionsEditContainer }>\r\n      <div className={ classes.ContainerHeader }>\r\n        <span>Запитання</span>\r\n      </div>\r\n      <div className={ classes.ContainerBody }>\r\n        { qeustionCreator( order ) }\r\n        <AddItemButton\r\n          externalClasses={ classes.AddButton }\r\n          buttonText=\"Додати запитання\"\r\n          clicked={ onCreateNewQuestion }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps( state ) {\r\n  return {\r\n    testQuestions: state.testEditorState.testQuestions,\r\n    testScales: state.testEditorState.testScales\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps( dispatch ) {\r\n  return {\r\n    onCreateNewQuestion: () => dispatch( createNewQuestion() ),\r\n    onChangeQuestionText: ( newQuestionText, targetQuestionId ) => dispatch( changeQuestionText( newQuestionText, targetQuestionId ) ),\r\n    onChangeQuestionNumber: () => dispatch( ( newQuestionsArray ) => changeQuestionNumber( newQuestionsArray ) ),\r\n    onDeleteQestion: ( targetQuestionId ) => dispatch( deleteQestion( targetQuestionId ) ),\r\n    onAddNewRadioAnswer: ( targetQuestionId ) => dispatch( addNewRadioAnswer( targetQuestionId ) ),\r\n    onChangeRadioAnswerText: ( newAnswerText, targetQuestionId, answerId ) => dispatch( changeRadioAnswerText( newAnswerText, targetQuestionId, answerId ) ),\r\n    onDeleteRadioAnswer: ( targetQuestionId, answerId ) => dispatch( deleteRadioAnswer( targetQuestionId, answerId ) ),\r\n    onAddDependency: ( targetQuestionId, answerId ) => dispatch( addDependency( targetQuestionId, answerId ) ),\r\n    onChangeAnswerValue: ( targetQuestionId, answerId, depIndex, newValue ) => dispatch( changeAnswerValue( targetQuestionId, answerId, depIndex, newValue ) ),\r\n    onChangeScaleDependency: ( ( targetQuestionId, answerId, depIndex, operationType, newValue ) => dispatch( changeScaleDependency( targetQuestionId, answerId, depIndex, operationType, newValue ) ) ),\r\n    onDeleteDependency: ( targetQuestionId, answerId, depIndex ) => dispatch( deleteDependency( targetQuestionId, answerId, depIndex ) ),\r\n  };\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( QuestionsEditContainer );","D:\\web\\Thoth\\thoth\\src\\components\\ScaleEditor\\ScaleEditor.js",["195","196"],"import React, { useRef, useEffect, useState } from 'react';\r\n\r\nimport classes from './ScaleEditor.module.scss';\r\n\r\nimport EditableInput from '../../components/UI/EditableInput/EditableInput';\r\nimport DeleteSideButton from '../../components/UI/DeleteSideButton/DeleteSidebutton';\r\n\r\nimport { motion } from 'framer-motion';\r\n\r\nimport { useMeasurePositions } from '../../hooks/useMeasurePositions';\r\n\r\n\r\nfunction ScaleEditor( { scaleName, index, scaleId, scaleNumber, changeScaleName, deleteScale, updatePosition, updateOrder } ) {\r\n\r\n  const [isDragging, setDragging] = useState( false );\r\n\r\n  const ref = useMeasurePositions( ( position ) => updatePosition( index, position ) );\r\n\r\n\r\n  return (\r\n    <motion.div\r\n      layout\r\n      style={ { zIndex: isDragging ? 3 : 1 } }\r\n      ref={ ref }\r\n      initial={ false }\r\n      whileHover={ { scale: 1.01 } }\r\n      className={ classes.ScaleEditor }\r\n      drag=\"y\"\r\n      onDragStart={ () => setDragging( true ) }\r\n      onDragEnd={ () => setDragging( false ) }\r\n      onViewportBoxUpdate={ ( _viewportBox, delta ) => {\r\n        isDragging && updateOrder( index, delta.y.translate );\r\n      } }\r\n    >\r\n      <div className={ classes.LeftSide }>\r\n        <EditableInput\r\n          inputId={ scaleId }\r\n          inputValue={ scaleName }\r\n          changed={ ( event ) => changeScaleName( event.target.value, scaleId ) }\r\n          inputIndex={ scaleNumber }\r\n        />\r\n      </div>\r\n      <DeleteSideButton\r\n        clicked={ () => deleteScale( scaleId ) }\r\n      />\r\n    </motion.div >\r\n  )\r\n}\r\n\r\nexport default ScaleEditor;","D:\\web\\Thoth\\thoth\\src\\components\\InterpretEditor\\InterpretEditor.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\NewQuestion\\NewQuestion.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\DeleteSideButton\\DeleteSidebutton.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\EditableInput\\EditableInput.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\ScalesList\\ScalesList.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\NumRange\\NumRange.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\NewRadioAnswer\\NewRadioAnswer.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\EditButton\\EditButton.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\NumInput\\NumInput.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\PlusButton\\PlusButton.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\MinusButton\\MinusButton.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\InterpretScale\\InterpretScale.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\CustomRadio\\CustomRadio.js",[],"D:\\web\\Thoth\\thoth\\src\\utils\\utility.js",[],"D:\\web\\Thoth\\thoth\\src\\utils\\comparator.js",[],"D:\\web\\Thoth\\thoth\\src\\hooks\\usePositionReorder.js",[],"D:\\web\\Thoth\\thoth\\src\\hooks\\useMeasurePositions.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\DragButton\\DragButton.js",[],"D:\\web\\Thoth\\thoth\\src\\components\\TestCard\\TestCard.tsx",[],["197","198"],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\AddItemButton\\AddItemButton.tsx",[],"D:\\web\\Thoth\\thoth\\src\\components\\UI\\CheckButton\\CheckButton.tsx",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":134,"column":7,"nodeType":"205","messageId":"206","endLine":134,"endColumn":23},{"ruleId":"203","severity":1,"message":"207","line":10,"column":8,"nodeType":"205","messageId":"206","endLine":10,"endColumn":21},{"ruleId":"203","severity":1,"message":"208","line":37,"column":11,"nodeType":"205","messageId":"206","endLine":37,"endColumn":18},{"ruleId":"203","severity":1,"message":"209","line":39,"column":11,"nodeType":"205","messageId":"206","endLine":39,"endColumn":15},{"ruleId":"203","severity":1,"message":"210","line":40,"column":11,"nodeType":"205","messageId":"206","endLine":40,"endColumn":13},{"ruleId":"211","severity":1,"message":"212","line":27,"column":54,"nodeType":"213","endLine":27,"endColumn":66,"suggestions":"214"},{"ruleId":"211","severity":1,"message":"215","line":34,"column":57,"nodeType":"213","endLine":34,"endColumn":72,"suggestions":"216"},{"ruleId":"203","severity":1,"message":"217","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":23},{"ruleId":"203","severity":1,"message":"218","line":1,"column":25,"nodeType":"205","messageId":"206","endLine":1,"endColumn":34},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'updatedQuestions' is assigned a value but never used.","Identifier","unusedVar","'AddItemButton' is defined but never used.","'scaleId' is assigned a value but never used.","'from' is assigned a value but never used.","'to' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'refreshOrder' and 'sortedScales'. Either include them or remove the dependency array.","ArrayExpression",["221"],"React Hook useEffect has missing dependencies: 'refreshOrder' and 'sortedQuestions'. Either include them or remove the dependency array.",["222"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},"Update the dependencies array to be: [refreshOrder, sortedScales, testScales]",{"range":"227","text":"228"},"Update the dependencies array to be: [refreshOrder, sortedQuestions, testQuestions]",{"range":"229","text":"230"},[994,1006],"[refreshOrder, sortedScales, testScales]",[1368,1383],"[refreshOrder, sortedQuestions, testQuestions]"]